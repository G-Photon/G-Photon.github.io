{
    "version": "https://jsonfeed.org/version/1",
    "title": "不确定的光子",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/06/02/OpenGL/OpenGL%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B-3/",
            "url": "http://example.com/2025/06/02/OpenGL/OpenGL%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B-3/",
            "title": "OpenGL学习历程(3)",
            "date_published": "2025-06-02T14:04:55.000Z",
            "content_html": "<p>此系列记录我跟随 LearnOpenGL 学习的历程。<br />\n<div class=\"links\"><div class=\"item\" title=\"相关代码\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ctUGhvdG9uL215X2xlYXJub3Blbmds\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ctUGhvdG9uL215X2xlYXJub3Blbmds\">相关代码</span>\n          <p class=\"desc\">LearnOpenGL相关代码</p>\n          </div></div></div></p>\n<h2 id=\"高级opengl\"><a class=\"anchor\" href=\"#高级opengl\">#</a> 高级 OpenGL</h2>\n<h3 id=\"抗锯齿\"><a class=\"anchor\" href=\"#抗锯齿\">#</a> 抗锯齿</h3>\n<p>锯齿现象的产生主要是由于光栅器将顶点数据转化为片段的方式</p>\n<h4 id=\"ssaa\"><a class=\"anchor\" href=\"#ssaa\">#</a> SSAA</h4>\n<p>超采样抗锯齿 (Super Sample Anti-aliasing, SSAA)，使用比正常分辨率更高的分辨率（即超采样）来渲染场景，当图像输出在帧缓冲中更新时，分辨率会被下采样 (Downsample) 至正常的分辨率。虽然它确实能够解决走样的问题，但是由于这样比平时要绘制更多的片段，它也会带来很大的性能开销。</p>\n<h4 id=\"msaa\"><a class=\"anchor\" href=\"#msaa\">#</a> MSAA</h4>\n<p>多重采样抗锯齿 (Multisample Anti-aliasing, MSAA)，它借鉴了 SSAA 背后的理念，但却以更加高效的方式实现了抗锯齿。<br />\n多重采样将每个像素单一的采样点变为多个采样点（这也是它名称的由来）。不再使用像素中心的单一采样点，取而代之的是以特定图案排列的 4 个子采样点（Subsample，采样点的数量可以是任意的，更多的采样点能带来更精确的遮盖率）。用这些子采样点来决定像素的遮盖度。<br />\n无论三角形遮盖了多少个子采样点，（每个图元中）每个像素只运行一次片段着色器。片段着色器使用插值到像素中心的顶点数据，然后，MSAA 使用更大的深度 / 模板缓冲区来确定子采样点的覆盖率。被覆盖的子采样点数量将决定了像素颜色对帧缓冲的影响程度。<br />\n&lt;center&gt;<br />\n&lt;figure&gt;<br />\n&lt;img src=/images/msaa-1.png /&gt;<br />\n&lt;img src=/images/msaa-2.png /&gt;<br />\n&lt;/figure&gt;<br />\n&lt;/center&gt;</p>\n<h4 id=\"opengl中的msaa\"><a class=\"anchor\" href=\"#opengl中的msaa\">#</a> OpenGL 中的 MSAA</h4>\n<p>在不启用帧缓冲的情况下，在 OpenGL 中启用 MSAA 只需要加入如下代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_SAMPLES<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 使用包含 4 个子样本的多重采样缓冲</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_MULTISAMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 开启多重采样，一般默认开启</span></pre></td></tr></table></figure><h4 id=\"离屏msaa\"><a class=\"anchor\" href=\"#离屏msaa\">#</a> 离屏 MSAA</h4>\n<p>如果使用我们自己的帧缓冲，则必须手动生成多重采样缓冲。<br />\n我们可以设置多重采样纹理附件与多重采样渲染缓冲对象，将其作为附件绑定到帧缓冲中。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">glGenFramebuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 创造并绑定多重采样纹理附件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">glGenTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>textureColorbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE_2D_MULTISAMPLE<span class=\"token punctuation\">,</span> textureColorbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">glTexImage2DMultisample</span><span class=\"token punctuation\">(</span>GL_TEXTURE_2D_MULTISAMPLE<span class=\"token punctuation\">,</span> samples<span class=\"token punctuation\">,</span> GL_RGB<span class=\"token punctuation\">,</span> SCR_WIDTH<span class=\"token punctuation\">,</span> SCR_HEIGHT<span class=\"token punctuation\">,</span> GL_TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>GL_TEXTURE_2D_MULTISAMPLE<span class=\"token punctuation\">,</span> GL_TEXTURE_MIN_FILTER<span class=\"token punctuation\">,</span> GL_LINEAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>GL_TEXTURE_2D_MULTISAMPLE<span class=\"token punctuation\">,</span> GL_TEXTURE_MAG_FILTER<span class=\"token punctuation\">,</span> GL_LINEAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">glFramebufferTexture2D</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> GL_COLOR_ATTACHMENT0<span class=\"token punctuation\">,</span> GL_TEXTURE_2D_MULTISAMPLE<span class=\"token punctuation\">,</span> textureColorbuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 创造并绑定多重采样渲染缓冲对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">glGenRenderbuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>rbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">glBindRenderbuffer</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> rbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">glRenderbufferStorageMultisample</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> samples<span class=\"token punctuation\">,</span> GL_DEPTH24_STENCIL8<span class=\"token punctuation\">,</span> SCR_WIDTH<span class=\"token punctuation\">,</span> SCR_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">glBindRenderbuffer</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">glFramebufferRenderbuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> GL_DEPTH_STENCIL_ATTACHMENT<span class=\"token punctuation\">,</span> GL_RENDERBUFFER<span class=\"token punctuation\">,</span> rbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>如果直接将我们的帧缓冲输出到屏幕上，我们可以将帧缓冲分开绑定至 GL_READ_FRAMEBUFFER 与 GL_DRAW_FRAMEBUFFER。glBlitFramebuffer 函数会根据这两个目标，决定哪个是源帧缓冲，哪个是目标帧缓冲。接下来，我们可以将图像位块传送 (Blit) 到默认的帧缓冲中，将多重采样的帧缓冲传送到屏幕上。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_READ_FRAMEBUFFER<span class=\"token punctuation\">,</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_DRAW_FRAMEBUFFER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">glBlitFramebuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> GL_COLOR_BUFFER_BIT<span class=\"token punctuation\">,</span> GL_NEAREST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>但是如果想用多重采样缓冲的纹理来做后期处理，我们可以将多重采样缓冲位块传送到一个没有使用多重采样纹理附件的 FBO 中，然后用这个普通的颜色附件来做后期处理，也就是生成一个新的 FBO，作为中介帧缓冲对象，将多重采样缓冲还原为一个能在着色器中使用的普通 2D 纹理。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> msFBO <span class=\"token operator\">=</span> <span class=\"token function\">CreateFBOWithMultiSampledAttachments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 使用普通的纹理颜色附件创建一个新的 FBO</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">glFramebufferTexture2D</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> GL_COLOR_ATTACHMENT0<span class=\"token punctuation\">,</span> GL_TEXTURE_2D<span class=\"token punctuation\">,</span> screenTexture<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">glfwWindowShouldClose</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>msFBO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">ClearFrameBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">DrawScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 将多重采样缓冲还原到中介 FBO 上</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_READ_FRAMEBUFFER<span class=\"token punctuation\">,</span> msFBO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_DRAW_FRAMEBUFFER<span class=\"token punctuation\">,</span> intermediateFBO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">glBlitFramebuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> GL_COLOR_BUFFER_BIT<span class=\"token punctuation\">,</span> GL_NEAREST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 现在场景是一个 2D 纹理缓冲，可以将这个图像用来后期处理</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">ClearFramebuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE_2D<span class=\"token punctuation\">,</span> screenTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">DrawPostProcessingQuad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因为屏幕纹理又变回了一个只有单一采样点的普通纹理，像是边缘检测这样的后期处理滤镜会重新导致锯齿。为了补偿这一问题，可以在之后对纹理进行模糊处理，或者创造自己的抗锯齿算法。<br />\n将一个多重采样的纹理图像不进行还原直接传入着色器也是可行的。GLSL 提供了这样的选项，让我们能够对纹理图像的每个子样本进行采样，所以我们可以创建我们自己的抗锯齿算法。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 将多重采样纹理传入，采样器定义为 sampler2DMS</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">sampler2DMS</span> screenTextureMS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 使用 texelFetch 函数获得每个子样本的值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">vec4</span> colorSample <span class=\"token operator\">=</span> <span class=\"token function\">texelFetch</span><span class=\"token punctuation\">(</span>screenTextureMS<span class=\"token punctuation\">,</span> TexCoords<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 第 4 个子样本</span></pre></td></tr></table></figure><p>比如下面代码进行了模糊化的后期处理</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">version</span> <span class=\"token expression\"><span class=\"token number\">330</span> core</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> FragColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> TexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">sampler2DMS</span> screenTextureMS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> offset <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">300.0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">vec2</span> offsets<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>offset<span class=\"token punctuation\">,</span>  offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 左上</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span>    offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 正上</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span> offset<span class=\"token punctuation\">,</span>  offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 右上</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>offset<span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 左</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 中</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span> offset<span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 右</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>offset<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 左下</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span>   <span class=\"token operator\">-</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 正下</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span> offset<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>offset<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 右下</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">float</span> kernel<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token number\">2.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">vec3</span> sampleTex<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// 对每个采样点取所有 MSAA 样本的平均值</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">vec3</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> s <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> s<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            color <span class=\"token operator\">+=</span> <span class=\"token function\">texelFetch</span><span class=\"token punctuation\">(</span>screenTextureMS<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ivec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>TexCoords<span class=\"token punctuation\">.</span>st <span class=\"token operator\">+</span> offsets<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">textureSize</span><span class=\"token punctuation\">(</span>screenTextureMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        sampleTex<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color <span class=\"token operator\">/</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">vec3</span> col <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        col <span class=\"token operator\">+=</span> sampleTex<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> kernel<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    FragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "OpenGL",
                "OpenGL",
                "图形学"
            ]
        },
        {
            "id": "http://example.com/2025/06/02/OpenGL/OpenGL%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B-2/",
            "url": "http://example.com/2025/06/02/OpenGL/OpenGL%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B-2/",
            "title": "OpenGL学习历程(2)",
            "date_published": "2025-06-01T16:56:48.000Z",
            "content_html": "<p>此系列记录我跟随 LearnOpenGL 学习的历程。</p>\n<div class=\"links\"><div class=\"item\" title=\"相关代码\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ctUGhvdG9uL215X2xlYXJub3Blbmds\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ctUGhvdG9uL215X2xlYXJub3Blbmds\">相关代码</span>\n          <p class=\"desc\">LearnOpenGL相关代码</p>\n          </div></div></div>\n<h2 id=\"光照\"><a class=\"anchor\" href=\"#光照\">#</a> 光照</h2>\n<p>通过结合 imgui，可以做到添加不同材质的物体与不同类型的光源，效果如图所示：<br />\n<img data-src=\"/images/second.png\" alt=\"效果图\" /></p>\n<h3 id=\"基础光照\"><a class=\"anchor\" href=\"#基础光照\">#</a> 基础光照</h3>\n<p>Phong 光照模型，光照计算的结果取决于物体的材质与光的属性，物体的材质决定这个物体反射光的能力：</p>\n<ul>\n<li>环境光照 (Ambient Lighting)：即使在黑暗的情况下，世界上通常也仍然有一些光亮（月亮、远处的光），所以物体几乎永远不会是完全黑暗的。为了模拟这个，我们会使用一个环境光照常量，它永远会给物体一些颜色。</li>\n<li>漫反射光照 (Diffuse Lighting)：模拟光源对物体的方向性影响 (Directional Impact)。它是风氏光照模型中视觉上最显著的分量。物体的某一部分越是正对着光源，它就会越亮。</li>\n<li>镜面光照 (Specular Lighting)：模拟有光泽物体上面出现的亮点。镜面光照的颜色相比于物体的颜色会更倾向于光的颜色。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>分量</th>\n<th>物理意义</th>\n<th>计算公式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>环境光</td>\n<td>基础环境照明</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>a</mi></msub><mo>=</mo><msub><mi>k</mi><mi>a</mi></msub><mo>×</mo><msub><mi>L</mi><mrow><mi>c</mi><mi>o</mi><mi>l</mi><mi>o</mi><mi>r</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">I_a = k_a \\times L_{color}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</td>\n</tr>\n<tr>\n<td>漫反射</td>\n<td>兰伯特余弦定律</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub><mo>=</mo><msub><mi>k</mi><mi>d</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><mi mathvariant=\"bold\">l</mi><mo stretchy=\"false\">)</mo><msub><mi>L</mi><mrow><mi>c</mi><mi>o</mi><mi>l</mi><mi>o</mi><mi>r</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">I_d = k_d (\\mathbf{n} \\cdot \\mathbf{l}) L_{color}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</td>\n</tr>\n<tr>\n<td>镜面反射</td>\n<td>高光反射效果</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>s</mi></msub><mo>=</mo><msub><mi>k</mi><mi>s</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">v</mi><mo>⋅</mo><mi mathvariant=\"bold\">r</mi><msup><mo stretchy=\"false\">)</mo><mi>α</mi></msup><msub><mi>L</mi><mrow><mi>c</mi><mi>o</mi><mi>l</mi><mi>o</mi><mi>r</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">I_s = k_s (\\mathbf{v} \\cdot \\mathbf{r})^\\alpha L_{color}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">r</span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 顶点着色器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">version</span> <span class=\"token expression\"><span class=\"token number\">330</span> core</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> aPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> aNormal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec3</span> FragPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec3</span> Normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> model<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> view<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> projection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    FragPos <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span>model <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>aPos<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Normal <span class=\"token operator\">=</span> <span class=\"token keyword\">mat3</span><span class=\"token punctuation\">(</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aNormal<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    gl_Position <span class=\"token operator\">=</span> projection <span class=\"token operator\">*</span> view <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>FragPos<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 片段着色器</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">version</span> <span class=\"token expression\"><span class=\"token number\">330</span> core</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> FragColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> Normal<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> FragPos<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec3</span> lightPos<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec3</span> viewPos<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec3</span> lightColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec3</span> objectColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// ambient</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">float</span> ambientStrength <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">vec3</span> ambient <span class=\"token operator\">=</span> ambientStrength <span class=\"token operator\">*</span> lightColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  \t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// diffuse </span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">vec3</span> norm <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>Normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">vec3</span> lightDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>lightPos <span class=\"token operator\">-</span> FragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">float</span> diff <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>norm<span class=\"token punctuation\">,</span> lightDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">vec3</span> diffuse <span class=\"token operator\">=</span> diff <span class=\"token operator\">*</span> lightColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">// specular</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">float</span> specularStrength <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">vec3</span> viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>viewPos <span class=\"token operator\">-</span> FragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">vec3</span> reflectDir <span class=\"token operator\">=</span> <span class=\"token function\">reflect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>lightDir<span class=\"token punctuation\">,</span> norm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">float</span> spec <span class=\"token operator\">=</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>viewDir<span class=\"token punctuation\">,</span> reflectDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">vec3</span> specular <span class=\"token operator\">=</span> specularStrength <span class=\"token operator\">*</span> spec <span class=\"token operator\">*</span> lightColor<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">vec3</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ambient <span class=\"token operator\">+</span> diffuse <span class=\"token operator\">+</span> specular<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> objectColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    FragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>其中要注意法向量的计算，我们的光照计算是在世界空间范围内进行的，所以我们要把法向量也变换到世界空间中，模型矩阵左上角 3x3 部分的逆矩阵的转置矩阵，将法向量变换到世界空间中：</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Normal <span class=\"token operator\">=</span> <span class=\"token keyword\">mat3</span><span class=\"token punctuation\">(</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aNormal<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>如果在观察空间中进行，计算 viewDir 时，观察者坐标默认为 (0,0,0)，同时要把光源以及 FragPos 变换到观察空间中，计算也要注意法向量的变换，是求 view*model 的逆转置矩阵。</p>\n<p>Gouraud Shading 着色在顶点着色器中计算光照，由于顶点少的多，所以更高效，但是得到的光照结果会特别不真实。比如一个简单的立方体会产生 &quot;条纹&quot; 现象，由于中间片元的颜色并非直接来自光源，而是插值的结果，所以在中间片元处的光照是不正确的，左上角和右下角三角形在亮度上相互冲突，从而在两个三角形之间产生了一条可见的条纹。</p>\n<p><img data-src=\"/images/basic_lighting_exercise3.png.png\" alt=\"&quot;条纹&quot;现象\" /></p>\n<h3 id=\"光照贴图与多光源\"><a class=\"anchor\" href=\"#光照贴图与多光源\">#</a> 光照贴图与多光源</h3>\n<p>我们可以用纹理来表示物体每个片段不同的材质。光源对环境光、漫反射和镜面光分量也分别具有不同的强度，所以光源也需要 ambient、diffuse 和 specular 三个光照分量。<br />\n在现实世界中，我们有各种各样的光源，LearnOpenGL 介绍了三种常见的光源：平行光，点光源，聚光源。</p>\n<ul>\n<li>\n<p>平行光：假设光源处于无限远，所有的光线都来自同一个方向，与光源的位置没有关系。在计算中直接使用光的 direction 向量而不是通过 position 来计算 lightDir 向量。</p>\n</li>\n<li>\n<p>点光源：对比之前介绍的简易光源，点光源会随着光线传播距离的增长逐渐削减光的强度。我们采用下面这个公式计算光照强度的衰减。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi>e</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>t</mi><mi>t</mi></mrow></msub><mo>=</mo><mfrac><mn>1.0</mn><mrow><msub><mi>K</mi><mi>c</mi></msub><mo>+</mo><msub><mi>K</mi><mi>l</mi></msub><mo>∗</mo><mi>d</mi><mo>+</mo><msub><mi>K</mi><mi>q</mi></msub><mo>∗</mo><msup><mi>d</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">{equation} F_{att} = \\frac{1.0}{K_c + K_l * d + K_q * d^2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.293548em;vertical-align:-0.972108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.972108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>不同的系数决定了点光源能覆盖到的距离，可以由<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vZ3JlM2Qub3JnL3Rpa2l3aWtpL3Rpa2ktaW5kZXgucGhwP3BhZ2U9LVBvaW50K0xpZ2h0K0F0dGVudWF0aW9u\"> Ogre3D 的 Wiki</span> 获取需要的系数值。</p>\n</li>\n<li>\n<p>聚光：对比点光源，它只照亮特定角度的物体。SpotDir 指定聚光所指向的方向，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span> 指定了聚光半径的切光角，在这个角度之外的物体不会被这个聚光所照亮，为了平滑边缘，我们一般会有一个内圆锥<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span> 和外圆锥<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span>，利用插值来让光从内圆锥逐渐减暗，直到外圆锥的边界。</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">float</span> intensity <span class=\"token operator\">=</span> <span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>theta <span class=\"token operator\">-</span> outerCutOff<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>cutOff <span class=\"token operator\">-</span> outerCutOff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<p>多光源的代码如下：</p>\n<figure class=\"highlight glsl\"><figcaption data-lang=\"GLSL\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 顶点着色器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">version</span> <span class=\"token expression\"><span class=\"token number\">330</span> core</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> aPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> aNormal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> aTexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec3</span> FragPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec3</span> Normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec2</span> TexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> model<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> view<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">mat4</span> projection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    FragPos <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span>model <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>aPos<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    Normal <span class=\"token operator\">=</span> <span class=\"token keyword\">mat3</span><span class=\"token punctuation\">(</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aNormal<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    TexCoords <span class=\"token operator\">=</span> aTexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    gl_Position <span class=\"token operator\">=</span> projection <span class=\"token operator\">*</span> view <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>FragPos<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 片段着色器</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">version</span> <span class=\"token expression\"><span class=\"token number\">330</span> core</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAX_LIGHTS</span> <span class=\"token expression\"><span class=\"token number\">16</span></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> FragPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">in</span> <span class=\"token keyword\">vec3</span> Normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> TexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> FragColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Material</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">sampler2D</span> diffuse<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">sampler2D</span> specular<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">vec3</span> diffuseColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">vec3</span> specularColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">float</span> shininess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">int</span> useDiffuseTexture<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">int</span> useSpecularTexture<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Light</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">vec3</span> ambient<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">vec3</span> diffuse<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">vec3</span> specular<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">// 定向光</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">vec3</span> direction<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\">// 点光源</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">vec3</span> position<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">float</span> constant<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">float</span> linear<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">float</span> quadratic<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\">// 聚光灯</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">float</span> cutOff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">float</span> outerCutOff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">int</span> numLights<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">uniform</span> Light lights<span class=\"token punctuation\">[</span>MAX_LIGHTS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec3</span> viewPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">uniform</span> Material material<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">vec3</span> <span class=\"token function\">CalculateLight</span><span class=\"token punctuation\">(</span>Light light<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> normal<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> fragPos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> viewDir<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">vec3</span> lightDir<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">float</span> attenuation <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">vec3</span> diffuseColor <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>useDiffuseTexture <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> </pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">.</span>diffuse<span class=\"token punctuation\">,</span> TexCoords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        material<span class=\"token punctuation\">.</span>diffuseColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">vec3</span> specularColor <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>useSpecularTexture <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">.</span>specular<span class=\"token punctuation\">,</span> TexCoords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        material<span class=\"token punctuation\">.</span>specularColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 定向光</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        lightDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>light<span class=\"token punctuation\">.</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 点光源 / 聚光灯</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        lightDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-</span> fragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">float</span> distance <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-</span> fragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        attenuation <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">.</span>constant <span class=\"token operator\">+</span> light<span class=\"token punctuation\">.</span>linear <span class=\"token operator\">*</span> distance <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                      light<span class=\"token punctuation\">.</span>quadratic <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">*</span> distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token comment\">// 聚光灯计算</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">float</span> intensity <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">float</span> theta <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>lightDir<span class=\"token punctuation\">,</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>light<span class=\"token punctuation\">.</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">float</span> epsilon <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span>cutOff <span class=\"token operator\">-</span> light<span class=\"token punctuation\">.</span>outerCutOff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        intensity <span class=\"token operator\">=</span> <span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>theta <span class=\"token operator\">-</span> light<span class=\"token punctuation\">.</span>outerCutOff<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> epsilon<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token comment\">// 光照计算...</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token comment\">// 漫反射</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">float</span> diff <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">,</span> lightDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">vec3</span> diffuse <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span>diffuse <span class=\"token operator\">*</span> diff <span class=\"token operator\">*</span> diffuseColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token comment\">// 镜面反射</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">vec3</span> reflectDir <span class=\"token operator\">=</span> <span class=\"token function\">reflect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>lightDir<span class=\"token punctuation\">,</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">float</span> spec <span class=\"token operator\">=</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>viewDir<span class=\"token punctuation\">,</span> reflectDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>shininess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">vec3</span> specular <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span>specular <span class=\"token operator\">*</span> spec <span class=\"token operator\">*</span> specularColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token comment\">// 环境光</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">vec3</span> ambient <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span>ambient <span class=\"token operator\">*</span> diffuseColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token comment\">// 合并结果</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token keyword\">vec3</span> finalColor <span class=\"token operator\">=</span> ambient <span class=\"token operator\">+</span> diffuse <span class=\"token operator\">+</span> specular<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token comment\">// 衰减</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> light<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        finalColor <span class=\"token operator\">*=</span> attenuation <span class=\"token operator\">*</span> intensity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">return</span> finalColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token keyword\">vec3</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">vec3</span> norm <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>Normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token keyword\">vec3</span> viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>viewPos <span class=\"token operator\">-</span> FragPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numLights<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        result <span class=\"token operator\">+=</span> <span class=\"token function\">CalculateLight</span><span class=\"token punctuation\">(</span>lights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> norm<span class=\"token punctuation\">,</span> FragPos<span class=\"token punctuation\">,</span> viewDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    FragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"模型加载\"><a class=\"anchor\" href=\"#模型加载\">#</a> 模型加载</h2>\n<h3 id=\"assimp库\"><a class=\"anchor\" href=\"#assimp库\">#</a> Assimp 库</h3>\n<p>使用 xmake 引入 Assimp 库非常简单，在 xmake.lua 中添加如下代码</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token function\">add_requires</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"assimp\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>configs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>system <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">set_kind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">add_includedirs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"include\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">add_files</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/main.cpp\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">-</span>   <span class=\"token function\">add_packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glfw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"imgui\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glad\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">+</span>   <span class=\"token function\">add_packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glfw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"imgui\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"assimp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glad\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr></table></figure><p>头文件加入</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assimp/Importer.hpp></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assimp/postprocess.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assimp/scene.h></span></span></pre></td></tr></table></figure><h3 id=\"网格mesh\"><a class=\"anchor\" href=\"#网格mesh\">#</a> 网格 (mesh)</h3>\n<p>一个模型会由几个 mesh 组成，每个 mesh 都是一个子模型。在 Assimp 中：</p>\n<ul>\n<li>一个 Mesh 对象本身包含渲染所需的所有相关数据，比如顶点位置、法线向量、纹理坐标、面片及物体的材质。</li>\n<li>一个 Mesh 会包含多个面片（Face）。一个面片表示渲染中的一个最基本的形状单位，即图元（基本图元有点、线、三角面片、矩形面片），其记录了一个图元的顶点索引，通过这个索引，可以寻找到对应的顶点位置数据。</li>\n<li>一个 Mesh 还会包含一个材质（Material）对象用于指定物体的一些材质属性。如颜色、纹理贴图。</li>\n</ul>\n<h3 id=\"模型model\"><a class=\"anchor\" href=\"#模型model\">#</a> 模型 (model)</h3>\n<p>当使用 Assimp 导入一个模型的时候，它通常会将整个模型加载进一个场景 (Scene) 对象，它会包含导入的模型 / 场景中的所有数据。Assimp 会将场景载入为一系列的节点 (Node)，每个节点包含了场景对象中所储存数据的索引，每个节点都可以有任意数量的子节点。我们只需要用下面这个函数就能完成模型的导入：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Assimp<span class=\"token double-colon punctuation\">::</span>Importer importer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> aiScene <span class=\"token operator\">*</span>scene <span class=\"token operator\">=</span> importer<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> aiProcess_Triangulate <span class=\"token operator\">|</span> aiProcess_FlipUVs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 函数第一个参数为模型的路径，第二个参数可以让 Assimp 导入数据时做一些额外的计算或操作</span></pre></td></tr></table></figure><p>我们可以进行很多有用的后期处理指令，比如：</p>\n<ul>\n<li>aiProcess_Triangulate：将模型所有的图元形状变换为三角形。</li>\n<li>aiProcess_FlipUVs：处理的时候翻转 y 轴的纹理坐标。（在 <a href=\"OpenGL%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B-1.md#%E7%BA%B9%E7%90%86\">纹理</a> 一章中详细的说明）</li>\n<li>aiProcess_GenNormals : 如果模型没有包含法线向量，就为每个顶点创建法线。</li>\n<li>aiProcess_SplitLargeMeshes : 把大的网格成几个小的的下级网格，当渲染有一个最大数量顶点的限制时或者只能处理小块网格时很有用。</li>\n<li>aiProcess_OptimizeMeshes : 和上个选项相反，它把几个网格结合为一个更大的网格，减少绘制调用从而进行优化。</li>\n</ul>\n<p>Assimp 数据结构的（简化）模型如下：<br />\n<img data-src=\"/images/Assimp.png\" alt=\"Assimp\" /></p>\n<ul>\n<li>和材质和网格 (Mesh) 一样，所有的场景 / 模型数据都包含在 Scene 对象中。Scene 对象也包含了场景根节点的引用。</li>\n<li>场景的 Root node（根节点）可能包含子节点（和其它的节点一样），它会有一系列指向场景对象中 mMeshes 数组中储存的网格数据的索引。Scene 下的 mMeshes 数组储存了真正的 Mesh 对象，节点中的 mMeshes 数组保存的只是场景中网格数组的索引。</li>\n</ul>\n<p>依照该结构，按照树递归的操作，我们可以写出对应的模型类和网格类。</p>\n",
            "tags": [
                "OpenGL",
                "OpenGL",
                "图形学"
            ]
        },
        {
            "id": "http://example.com/2025/06/01/OpenGL/OpenGL%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B-1/",
            "url": "http://example.com/2025/06/01/OpenGL/OpenGL%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B-1/",
            "title": "OpenGL学习历程(1)",
            "date_published": "2025-06-01T14:54:31.000Z",
            "content_html": "<p>此系列记录我跟随 LearnOpenGL 学习的历程。<br />\n<div class=\"links\"><div class=\"item\" title=\"相关代码\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ctUGhvdG9uL215X2xlYXJub3Blbmds\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ctUGhvdG9uL215X2xlYXJub3Blbmds\">相关代码</span>\n          <p class=\"desc\">LearnOpenGL相关代码</p>\n          </div></div></div></p>\n<h2 id=\"入门\"><a class=\"anchor\" href=\"#入门\">#</a> 入门</h2>\n<h3 id=\"安装opengl\"><a class=\"anchor\" href=\"#安装opengl\">#</a> 安装 OpenGL</h3>\n<p>如果是 Windows 端，我使用的 msvc+xmake+vscode 开发环境。msvc 安装直接从微软官方下载 Visual Studio，xmake 用于项目构建和 c++ 库管理，vscode 轻巧方便。<br />\nxmake 的安装，这里推荐从 Scoop 安装 xmake。</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 可选：首次运行远程脚本时需要</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">Set-ExecutionPolicy</span> RemoteSigned <span class=\"token operator\">-</span>Scope CurrentUser</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 安装 Scoop 的命令</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">Invoke-RestMethod</span> get<span class=\"token punctuation\">.</span>scoop<span class=\"token punctuation\">.</span>sh <span class=\"token punctuation\">|</span> <span class=\"token function\">Invoke-Expression</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 从 Scoop 安装 xmake</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>scoop install xmake</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># xmake 生成项目</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>xmake create opengl</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cd opengl</pre></td></tr></table></figure><p>关于 xmake 在 vscode 环境的配置，xmake 无法用 vscode C/C++ 扩展默认的 InteltiSense 进行语法补全和语法检查，所以我们需要用 Clangd 代替，在 vscode 安装 Clangd 扩展，如果原先没有安装 Clangd 会自动安装，也可以用 scoop 安装 Clangd。<br />\n但是仅仅有 Clangd 是不够的，我们需要在 xmake.lua 中进行如下配置修改，修改后编译成功通过一次后则可以检测到新的库。</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>xmake<span class=\"token punctuation\">.</span>lua</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token function\">add_rules</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plugin.compile_commands.autoupdate\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>outputdir <span class=\"token operator\">=</span> <span class=\"token string\">\".vscode\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr></table></figure><p>而 xmake 自身的调试无法在 vscode 上进行方便的断点检查，所以我们利用 vscode C/C++ 扩展所带的调试功能，在.vscode 文件夹下新建 launch.json，配置如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 使用 IntelliSense 了解相关属性。 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 悬停以查看现有属性的描述。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"(gdb) 启动\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppvsdbg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;workspaceFolder&#125;/build/windows/x64/debug/a.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"stopAtEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token property\">\"environment\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token property\">\"externalConsole\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们进行 OpenGL 开发所需相关的库有 glad、glfw（后续还有 assimp、glm 等），在这里我们额外用 imgui 作为界面库，在 xmake.lua 中进行修改</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>xmake<span class=\"token punctuation\">.</span>lua</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token function\">add_requires</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glad\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"glfw\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token function\">add_requires</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"imgui\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>configs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>glfw <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span> opengl3 <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">set_kind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">add_files</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/main.cpp\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">+</span>   <span class=\"token function\">add_packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glfw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glad\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"imgui\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr></table></figure><p>关于 imgui 的配置，我们在 main.cpp 的添加如下头文件：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>main<span class=\"token punctuation\">.</span>cpp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">+</span> #include <span class=\"token string\">\"imgui.h\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">+</span> #include <span class=\"token string\">\"imgui_impl_glfw.h\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">+</span> #include <span class=\"token string\">\"imgui_impl_opengl3.h\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">+</span> #include <span class=\"token string\">\"imgui_impl_opengl3_loader.h\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>之后利用 xmake 进行 build，xmake 会自动下载库进行配置。</p>\n<h3 id=\"纹理引用我们自己的头文件\"><a class=\"anchor\" href=\"#纹理引用我们自己的头文件\">#</a> 纹理（引用我们自己的头文件）</h3>\n<p>在纹理一节中，我们需要添加新的 stb_image.h 单头文件图像加载库，我们可以在项目下新建 include 文件夹，将 stb_image.h 头文件放入 include 文件夹中，将.cpp 文件放入 source 文件夹中（如果有的话）。之后在 xmake.lua 下将 include 文件夹中的头文件都加入链接：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>xmake<span class=\"token punctuation\">.</span>lua</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">set_kind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">+</span>   <span class=\"token function\">add_includedirs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"include\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">add_files</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/main.cpp\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">add_packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glfw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"imgui\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"assimp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glad\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr></table></figure><p>由于 OpenGL 要求 y 轴坐标在图片底部，但是图片的 y 轴坐标通常在顶部，所以我们可以借助 stb_image.h 在图像加载时帮助我们翻转 y 轴，只需要在加载任何图像前加入以下语句即可：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">stbi_set_flip_vertically_on_load</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>值得注意的是，后续用 assimp 导入的模型纹理，大部分模型纹理 (比如米哈游官方提供的各类模型) 进行了处理，本身图像 y 轴便是反的，此时不用再翻转 y 轴。</p>\n<h3 id=\"变换\"><a class=\"anchor\" href=\"#变换\">#</a> 变换</h3>\n<p>这一章主要涉及的是矩阵相关知识，比较重点的是关于旋转部分，欧拉角与四元数<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>v</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>v</mi><mi>y</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>v</mi><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">q=(cos(\\frac{\\theta }{2} ),sin(\\frac{\\theta }{2} )*vx,sin(\\frac{\\theta }{2} )*vy,sin(\\frac{\\theta }{2} )*vz)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>：</p>\n<div class=\"note info\">\n<p>欧拉角：<br />\n1、欧拉角的旋转顺序非常重要，不同的旋转顺序得到的最终旋转结果不一致。<br />\n2、使用欧拉角描述三维旋转时，当一个旋转轴与另一个旋转轴重合时，系统失去一个自由度，导致无法独立控制所有旋转方向，即万向节死锁现象。<br />\n3、物体角度状态与欧拉角坐标并非一一对应关系，某些位置状态并不唯一确定一组欧拉角坐标。<br />\n四元数：<br />\n1、包含了四个实参数以及三个虚部（一个实部三个虚部）。<br />\n2、不会产生万向节死锁现象。<br />\n3、可以插值，不同的四元数对应的旋转是唯一的，多次旋转可以进行计算上的优化。</p>\n</div>\n<p>同时引用了 glm 库，该库同样只需要通过 xmake 引入即可：</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>xmake<span class=\"token punctuation\">.</span>lua</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token function\">add_requires</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glm\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">set_kind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">add_includedirs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"include\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">add_files</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/main.cpp\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">-</span>   <span class=\"token function\">add_packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glfw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glad\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"imgui\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">+</span>   <span class=\"token function\">add_packages</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glfw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"glad\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"imgui\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"glm\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">...</span></pre></td></tr></table></figure><h3 id=\"坐标系统\"><a class=\"anchor\" href=\"#坐标系统\">#</a> 坐标系统</h3>\n<p>首先要记住，OpenGL 默认是 x 轴朝右，y 轴朝上，z 轴朝内 (朝向你自己)。</p>\n<ul>\n<li>\n<p><strong>局部坐标</strong>，是对象相对于局部原点的坐标，也是物体起始的坐标。比如，最原始的处于远点的一个立方体。</p>\n</li>\n<li>\n<p><strong>世界空间</strong>，世界空间坐标是处于一个更大的空间范围的。这些坐标相对于世界的全局原点，它们会和其它物体一起相对于世界的原点进行摆放。比如，我们将处于原点的立方体摆放到我们需要摆放到的位置。</p>\n</li>\n<li>\n<p><strong>观察空间</strong>，每个坐标都是从摄像机或者说观察者的角度进行观察的。比如，我们将立方体相对于原点的坐标转换为相对于摄像机的坐标，如果我们要将摄像机向后移动，那么我们将整个场景向前移动，两者是一样的。</p>\n</li>\n<li>\n<p><strong>裁剪空间</strong>，坐标到达观察空间之后，我们需要将其投影到裁剪坐标。裁剪坐标会被处理至 - 1.0 到 1.0 的范围内，并判断哪些顶点将会出现在屏幕上。最常用的投影有正视投影、透视投影。这里要注意，经过透视投影后是非线性的，后续对法向量的处理需要注意。</p>\n</li>\n<li>\n<p><strong>屏幕空间</strong>，我们将使用一个叫做视口变换 (Viewport Transform) 的过程。视口变换将位于 - 1.0 到 1.0 范围的坐标变换到由 glViewport 函数所定义的坐标范围内。最后变换出来的坐标将会送到光栅器，将其转化为片段。</p>\n</li>\n</ul>\n<p>各个坐标的变换关系是这样的：<br />\n局部空间 --<em><strong>model</strong></em>--&gt; 世界空间 --<em><strong>view</strong></em>--&gt; 观察空间 --<em><strong>projection</strong></em>--&gt; 裁剪空间 --<em><strong> 视口变换</strong></em> --&gt; 屏幕空间<br />\n在这里的<em><strong> model</strong></em>、<em><strong>view</strong></em>、<em><strong>projection</strong></em> 为变换矩阵，比如对坐标<em><strong> x</strong></em> 进行变换时候，最后变换的结果是<em><strong> projection</strong></em>*<em><strong>view</strong></em>*<em><strong>model</strong></em>*x，矩阵乘法的顺序不能错，其中<em><strong> projection</strong></em>*<em><strong>view</strong></em>*<em><strong>model</strong></em> 得到的结果称为 MVP 矩阵。</p>\n<h3 id=\"摄像机\"><a class=\"anchor\" href=\"#摄像机\">#</a> 摄像机</h3>\n<p>一个仿照 Unity 摄像机移动系统（WASD 控制前后左右，Q 上升，E 下降）</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>main<span class=\"token punctuation\">.</span>cpp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">processInput</span><span class=\"token punctuation\">(</span>GLFWwindow <span class=\"token operator\">*</span>window<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_ESCAPE<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">glfwSetWindowShouldClose</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_W<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessKeyboard</span><span class=\"token punctuation\">(</span>FORWARD<span class=\"token punctuation\">,</span> deltaTime <span class=\"token operator\">*</span> MoveSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_S<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessKeyboard</span><span class=\"token punctuation\">(</span>BACKWARD<span class=\"token punctuation\">,</span> deltaTime <span class=\"token operator\">*</span> MoveSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_A<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessKeyboard</span><span class=\"token punctuation\">(</span>LEFT<span class=\"token punctuation\">,</span> deltaTime <span class=\"token operator\">*</span> MoveSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_D<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessKeyboard</span><span class=\"token punctuation\">(</span>RIGHT<span class=\"token punctuation\">,</span> deltaTime <span class=\"token operator\">*</span> MoveSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_Q<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessKeyboard</span><span class=\"token punctuation\">(</span>UP<span class=\"token punctuation\">,</span> deltaTime <span class=\"token operator\">*</span> MoveSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_E<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessKeyboard</span><span class=\"token punctuation\">(</span>DOWN<span class=\"token punctuation\">,</span> deltaTime <span class=\"token operator\">*</span> MoveSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_F<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        cameraMouseControl <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>cameraMouseControl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 切换摄像机控制模式</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetKey</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_KEY_R<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 重置摄像机位置和方向</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>camera<span class=\"token punctuation\">.</span>h</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ProcessKeyboard</span><span class=\"token punctuation\">(</span>Camera_Movement direction<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> deltaTime<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">float</span> velocity <span class=\"token operator\">=</span> MovementSpeed <span class=\"token operator\">*</span> deltaTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">==</span> FORWARD<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            Position <span class=\"token operator\">+=</span> glm<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>Front<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> Front<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> velocity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">==</span> BACKWARD<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            Position <span class=\"token operator\">-=</span> glm<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>Front<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> Front<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> velocity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">==</span> LEFT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            Position <span class=\"token operator\">-=</span> glm<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>Right<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> Right<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> velocity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">==</span> RIGHT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            Position <span class=\"token operator\">+=</span> glm<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>Right<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> Right<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> velocity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">==</span> UP<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            Position <span class=\"token operator\">+=</span> glm<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> velocity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">==</span> DOWN<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            Position <span class=\"token operator\">-=</span> glm<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> velocity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>如果你引用了 imgui 作为界面库，为了使鼠标作用不冲突，可以进行如下修改：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>main<span class=\"token punctuation\">.</span>cpp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">mouse_callback</span><span class=\"token punctuation\">(</span>GLFWwindow <span class=\"token operator\">*</span>window<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> xpos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> ypos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 获取 ImGui 的 IO 状态</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ImGuiIO <span class=\"token operator\">&amp;</span>io <span class=\"token operator\">=</span> <span class=\"token class-name\">ImGui</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetIO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 如果 ImGui 正在使用鼠标，或左键未按下时，不处理视角移动</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>WantCaptureMouse <span class=\"token operator\">||</span> <span class=\"token function\">glfwGetMouseButton</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> GLFW_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> GLFW_PRESS <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cameraMouseControl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        firstMouse <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 重置初始位置标记</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>firstMouse<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 这个 bool 变量初始时是设定为 true 的</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        lastX <span class=\"token operator\">=</span> xpos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        lastY <span class=\"token operator\">=</span> ypos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        firstMouse <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span> xoffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>xpos <span class=\"token operator\">-</span> lastX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">float</span> yoffset <span class=\"token operator\">=</span> lastY <span class=\"token operator\">-</span> ypos<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 注意这里是相反的，因为 y 坐标是从底部往顶部依次增大的</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cameraMouseControl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        xoffset <span class=\"token operator\">*=</span> cameraSpeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        yoffset <span class=\"token operator\">*=</span> cameraSpeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    lastX <span class=\"token operator\">=</span> xpos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    lastY <span class=\"token operator\">=</span> ypos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessMouseMovement</span><span class=\"token punctuation\">(</span>xoffset<span class=\"token punctuation\">,</span> yoffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure>",
            "tags": [
                "OpenGL",
                "OpenGL",
                "图形学"
            ]
        },
        {
            "id": "http://example.com/2022/10/02/hello-world/",
            "url": "http://example.com/2022/10/02/hello-world/",
            "title": "Hello world！！！",
            "date_published": "2022-10-02T09:15:42.965Z",
            "content_html": "<p>许久之前便想写一个自己的博客，苦于一直没时间<span class=\"spoiler\" title=\"你知道得太多了\">一直在摸鱼</span>，难得国庆假期，抽空写了一个。利用 hexo+shoka <span class=\"spoiler\" title=\"你知道得太多了\">因为很好看</span>，写了一个，这篇文章，便是我学习博客路的 hello world 了。</p>\n<h2 id=\"计划\"><a class=\"anchor\" href=\"#计划\">#</a> 计划</h2>\n<h3 id=\"分类\"><a class=\"anchor\" href=\"#分类\">#</a> 分类</h3>\n<p>后续打算把我学习过程中的笔记，经验都记录到博客里，大致是三个类型，机器学习，算法题，以及学习过程中的笔记。第一篇博客就这样到此为止了。再来打印一个 hello world <span class=\"spoiler\" title=\"你知道得太多了\">博客的</span>。</p>\n<h3 id=\"创建一个新文章\"><a class=\"anchor\" href=\"#创建一个新文章\">#</a> 创建一个新文章</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><h3 id=\"运行\"><a class=\"anchor\" href=\"#运行\">#</a> 运行</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><h3 id=\"继承静态文件\"><a class=\"anchor\" href=\"#继承静态文件\">#</a> 继承静态文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><h3 id=\"上传\"><a class=\"anchor\" href=\"#上传\">#</a> 上传</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy <span class=\"token parameter variable\">-g</span></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}